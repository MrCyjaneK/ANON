def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        applicationId "anon.xmr"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments '-DANDROID_STL=c++_shared'
            }
        }
        //For m1 macs since x86 ndk build fails
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    externalNativeBuild {
        cmake {
            path "./CMakeLists.txt"
        }
    }

    // Map for the version code that gives each ABI a value.
    def abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
    // Enumerate translated locales
    def availableLocales = ["en"]
    new File("app/src/main/res/").eachFileMatch(~/^values-.*/) { file ->
        def languageTag = file.name.substring(7).replace("-r", "-")
        if (languageTag != "night")
            availableLocales.add(languageTag)
    }

    // APKs for the same app that all have the same version information.
    android.applicationVariants.all { variant ->
        // Update string resource: available_locales
        variant.resValue("string", "available_locales", availableLocales.join(","))
        // Assigns a different version code for each output APK.
        variant.outputs.all {
            output ->
                def abiName = output.getFilter(com.android.build.OutputFile.ABI)
                output.versionCodeOverride = abiCodes.get(abiName, 0) + 10 * versionCode

                if (abiName == null) abiName = "universal"
                def v = "${variant.versionName}".replaceFirst(" '.*' ?", "")
                        .replace(".", "x")
                        .replace("(", "-")
                        .replace(")", "")
                outputFileName = "$rootProject.ext.apkName-" + v + "_" + abiName + ".apk"
        }
    }

    buildTypes {

        release {
            // Signing with the debug keys for now, so `flutter run --release` works.

            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "app"
    productFlavors {
        mainNet {
            dimension "app"
            resValue 'string', 'app_title', '"Anon"'
            buildConfigField 'boolean', 'VIEW_ONLY', 'false'
            buildConfigField 'String', 'NETWORK', '"main"'
        }
        dev{
            dimension "app"
            resValue 'string', 'app_title', '"ANON Dev"'
            buildConfigField 'String', 'NETWORK', '"main"'
            applicationIdSuffix ".dev"
        }
        stageNet {
            dimension "app"
            resValue 'string', 'app_title', '"ANON StageNet"'
            buildConfigField 'String', 'NETWORK', '"staging"'
            buildConfigField 'boolean', 'VIEW_ONLY', 'false'
            applicationIdSuffix ".staging"
        }
        viewOnlymainNet {
            dimension "app"
            resValue 'string', 'app_title', '"Anon View Only"'
            buildConfigField 'String', 'NETWORK', '"main"'
            buildConfigField 'boolean', 'VIEW_ONLY', 'true'
            applicationIdSuffix ".view"
        }
        viewOnlystageNet {
            dimension "app"
            resValue 'string', 'app_title', '"Anon View Only -StageNet"'
            buildConfigField 'boolean', 'VIEW_ONLY', 'true'
            buildConfigField 'String', 'NETWORK', '"staging"'
            applicationIdSuffix ".view.staging"
        }
    }
    namespace 'anon.xmr.app.anon_wallet'


}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "com.jakewharton.timber:timber:5.0.1"
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'dnsjava:dnsjava:2.1.9'
    implementation 'org.jitsi:dnssecjava:1.2.0'
    implementation 'androidx.work:work-runtime-ktx:2.8.0'
    implementation "org.bouncycastle:bcprov-jdk15on:1.68"
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha05'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'com.google.zxing:core:3.5.0'
    implementation 'androidx.camera:camera-core:1.2.1'
    implementation 'androidx.camera:camera-camera2:1.2.1'
    implementation 'androidx.camera:camera-lifecycle:1.2.1'
    implementation 'androidx.camera:camera-view:1.2.1'
    implementation 'io.github.rburgst:okhttp-digest:3.0.1'
}
